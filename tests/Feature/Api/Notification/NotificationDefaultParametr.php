<?php
declare(strict_types=1);
namespace Tests\Feature\Api\Notification;

use App\Models\notification;
use App\Repository\Eloquent\NotificationRepository;
use Illuminate\Database\Eloquent\Collection;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

class NotificationDefaultParametr extends TestCase
{
    protected $correctData, $errorData, $repository, $expectedKeys;
    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $notification = notification::factory()->create([
            'id' => 1
        ]);

        $this->expectedKeys = [
            'id',
            'message',
            'sender_id',
            'recipient_id'
        ];

        $this->correctData = [
            'message' => "Lorem ipsum .?",
            'sender_id' => 5,
            'recipient_id' => 40
        ];
        $this->errorData = [
            'message' => "/./></",
            'sender_id' => "test",
            'recipient_id' => "test"
        ];

        $this->repository = new NotificationRepository($notification);
        $this->hasExpectationOnOutput();
    }
    /**
     * A basic feature test example.
     *
     * @return void
     */

    public function verificationRecipient(int $idRecipient, $data) {

        foreach ($data ?? [] as $item) {
            if ($idRecipient !== (int) $item['recipient_id']) return false;
        }
        return true;
    }
}

<?php
declare(strict_types=1);
namespace Tests\Feature\Api\Message;

use App\Models\Message;
use App\Models\User;
use App\Repository\Eloquent\MessageRepository;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Laravel\Sanctum\Sanctum;
use Tests\TestCase;

class RepositoryEloquentTest extends DefaultParametr
{
    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        Sanctum::actingAs(User::factory()->create([
            'id' => 1
        ]), ['*']);
    }

    /**
     * A basic feature test example.
     *
     * @return void
     */
    public function testIndex()
    {
        $messages = $this->repository->get(1);

        $correctMessages = $this->verificationRecipientsMessages(1, $messages);
        $correctStructure = $this->comparisonKeyWithModel($messages[0], $this->expectedKeys);

        $this->assertTrue($correctMessages);
        $this->assertEquals($this->expectedKeys, $correctStructure);
        $this->assertCount(2, $messages);
    }

    public function testShow() {
        $message = $this->repository->find(1);

        $correctStructure = $this->comparisonKeyWithModel($message, $this->expectedKeys);

        $this->assertEquals($this->expectedKeys, $correctStructure);
    }

    public function testCreate() {
        $message = $this->repository->create($this->correctData);

        $correctStructure = $this->comparisonKeyWithModel($message, $this->expectedKeys);

        $this->assertDatabaseHas('messages', $this->correctData);
        $this->assertEquals($this->expectedKeys, $correctStructure);
    }

    public function testUpdate() {
        $message = $this->repository->update($this->correctData, 3);

        $correctStructure = $this->comparisonKeyWithModel($message, $this->expectedKeys);

        $this->assertDatabaseHas('messages', $this->correctData);
        $this->assertEquals($this->expectedKeys, $correctStructure);
    }

}

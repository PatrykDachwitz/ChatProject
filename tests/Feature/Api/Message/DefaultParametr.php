<?php
declare(strict_types=1);
namespace Tests\Feature\Api\Message;

use App\Models\Message;
use App\Repository\Eloquent\MessageRepository;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

class DefaultParametr extends TestCase
{
    protected $correctData, $errorData, $expectedKeys;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        Message::factory()->create([
            'sender_id' => 2,
            'recipient_id' => 1,
            'id' => 2
        ]);
        Message::factory()->create([
            'sender_id' => 3,
            'recipient_id' => 4,
            'id' => 3
        ]);

        $this->repository = new MessageRepository(        Message::factory()->create([
            'sender_id' => 1,
            'recipient_id' => 2,
            'id' => 1
        ]));
        $this->correctData = [
            'readed' => true,
            'message' => "Lorem ipsum",
            'sender_id' => 1,
            'recipient_id' => 2
        ];

        $this->errorData = [
            'readed' => "ipsum",
            'sender_id' => "ipsum",
            'recipient_id' => "ipsum"
        ];

        $this->expectedKeys = [
            'readed',
            'message',
            'sender_id',
            'recipient_id'
        ];
    }

    public function verificationRecipientsMessages(int $id, $data) {
        foreach ($data ?? [] as $item) {
            if ($item['sender_id'] !== $id & $item['recipient_id'] !== $id) return false;
        }

        return true;
    }
}
